@using TGP.Seguridad.BussinessLogic.Dto
@model IEnumerable<ListadoNodoFuncionalViewModel>
    @{
        ViewBag.Title = "Seg - Listado de Nodos Funcionales";
        Layout = "~/Views/Shared/_LayoutBootstrap.cshtml";
    }




<div class="uk-grid sigaf-titulo">
    <div class="uk-width-large-1-2">
        <h2 class="uk-margin-bottom">Listado de Nodos Funcionales</h2>
    </div>
    @*@if (ViewBag.EsAmbienteDESACG != null && ViewBag.EsAmbienteDESACG)
     {*@
        <div class="uk-width-large-1-2">
            <div class="uk-grid uk-grid-small uk-flex uk-flex-right" data-uk-grid-margin data-uk-grid-match="{target:'.md-btn-sigaf'}">
                <div id="divNuevaEst">
                    <a title="" onclick="NuevoNodo()" href="#" class="md-btn md-btn-sigaf md-btn-accent md-fab-wave-light waves-effect waves-button waves-light">
                        <h2 class="heading_d uk-text-left md-color-white">
                            Nuevo
                            <span class="sub-heading md-color-white uk-text-upper">
                                Nodo Funcional
                            </span>
                        </h2>
                        <i class="icon-appSigaf material-icons">add_circle</i>
                    </a>
                </div>
            </div>
        </div>
     @*}*@
</div>


    <div class="md-card">
        <div class="md-card-content">
            <div class="uk-grid ">
                <div class="uk-width-1-2">
                    <div class="md-input-wrapper md-input-filled">
                        @Html.Label("Estructura", "Estructura")
                        @Html.Partial("FiltroEstructuras", new Seguridad.FiltroEstructuras(true, null))
                    </div>
                </div>
            </div>
        </div>
    </div>


    <div class="md-card uk-margin-bottom">
        <div class="md-card-content">
            <div id="div-resultados">
                @Html.Partial("Partials/_ResultadoListadoNodosFuncionales")
            </div>

        </div>
    </div>


    @section scripts{
        <script>
       $(document).ready(function () {

        activarMenu('#Listado-NodoFuncional');

        aplicarSelectize($('.selectize'));

        $("#filterEstructuras").change(function () {
            if (!isNullOrEmpty('#filterEstructuras') && $('#filterEstructuras').val() != "")
                changeEstructura();
        }).keyup(function () {
            if (!isNullOrEmpty('#filterEstructuras') && $('#filterEstructuras').val() != "")
                changeEstructura();
        });
        updateDatatable();
        changeEstructura();

    });

    function updateDatatable() {
        table = $('#lista-nodos').dataTable({
            "scrollX": true,
            iDisplayLength: 25,
            aaSorting: [[1, "asc"]],
            dom: "<'uk-grid' <'uk-width-large-1-2 countCheck'><'uk-width-large-1-2 uk-flex uk-flex-right'<'agregarNuevoDestBtn uk-margin-right'><'eliminarDestBtn'>>>" +
            "<'uk-grid uk-margin-small-bottom'<'uk-width-large-3-10'l><'uk-width-large-3-10 uk-padding-remove'f> <'uk-width-large-4-10 uk-padding-remove uk-flex uk-flex-right'B>>tirp",
            colVis: {
                buttonText: '<i class="fa fa-eye" title="Mostrar / Ocultar"></i>',
                restore: "Reestablecer",
                showAll: "Mostrar Todas"
            },
            aoColumnDefs: [
                { bSortable: false, aTargets: [6] },
            ],
            "lengthMenu": [[25, 50, 100, 300], [25, 50, 100, 300]],
            buttons: [
                { extend: 'copy', className: 'md-btn md-btn-small', text: 'Copiar' },
                { extend: 'csv', title: 'Listado de Nodos Funcionales', className: 'md-btn md-btn-small' },
                { extend: 'pdf', title: 'Listado de Nodos Funcionales', className: 'md-btn md-btn-small', orientation: 'landscape', exportOptions: { columns: [0, 1, 2, 3, 4], }, customize: function (doc) { doc.defaultStyle.alignment = 'landscape'; } },
                { extend: 'print', className: 'md-btn md-btn-small', text: 'Imprimir' }
            ],
            language: agregarLenguajeDatatable(),
        });
    }



    function changeEstructura() {
        $.ajax(
            {
               url: '@Url.Action("GetNodos", "NodoFuncional")',
               type: "POST",
               data: {
                   cod: $('select[name=Estructura]').val()
               },
               beforeSend: function (xhr) {
                   //sacar el cerrar con el ESC al modal
                   showLoadingModal();
               },
               success: function (data) {
                   hideLoadingModal();
                   $("#div-resultados").html(data);
                   updateDatatable();
                   //actualizacion de la grilla y bloque x seleccion d eorganismo por mouse
               },
               error: function (e) {
                   hideLoadingModal();
               }
           });
    }


        function eliminarNodo(descripcion, id, version) {
            swal({
                title: "",
                text: "¿Desea eliminar el Nodo Funcional " + descripcion +  "? ",
                icon: "warning",
                buttons: {
                    confirm: "Aceptar",
                    cancel: "Cancelar"
                },
                closeOnClickOutside: false,
            }).then(
                (isConfirm) => {
                    if (isConfirm) {
                        $.ajax({
                            type: "POST",
                            url: '@Url.Action("Eliminar", "NodoFuncional")',
                            data: {
                                version: version,
                                id: id
                            },
                            beforeSend: function (xhr) {
                                showLoadingModal();
                            },
                            success: function (data) {
                                hideLoadingModal();
                                    swal({
                                        title: "",
                                        text: data.mensaje,
                                        icon: data.tipoMensaje,
                                        buttons: {
                                            confirm: "Aceptar"
                                        },
                                        closeOnClickOutside: false,
                                    }).then(() => {
                                        changeEstructura();
                                        swal.close();
                                    });
                            }

                        });
                    }
                });
        }

        function NuevoNodo() {
            showLoadingModal();
            var est = $('select[name=Estructura]').val();
            window.location.href = '@Url.Action("Nuevo", "NodoFuncional")?cod='+est;
        }

        </script>


    }
