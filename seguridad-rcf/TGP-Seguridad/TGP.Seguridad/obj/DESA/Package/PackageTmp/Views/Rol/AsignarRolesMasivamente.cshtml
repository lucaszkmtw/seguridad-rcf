@using TGP.Seguridad.BussinessLogic.Dto;
@model AsignacionMasivaViewModel
@{
    ViewBag.Title = "Seg - Asignar Rol a Usuarios";
    Layout = "~/Views/Shared/_LayoutBootstrap.cshtml";
}


<div class="uk-grid sigaf-titulo">
    <div class="uk-width-1-2">
        <h2 class="uk-margin-bottom">Asignar Rol a Usuarios</h2>
    </div>
</div>


@using (Ajax.BeginForm(null, null, new AjaxOptions() { HttpMethod = "POST" }, new { id = "FormAsignacionMasiva" }))
{
    <div class="md-card uk-margin-bottom">
        <div class="md-card-content">
            <div class="uk-grid">
                <div class="uk-width-medium-2-3">
                    @Html.Label("Estructura", "Estructura")
                    @Html.DropDownListFor(model => model.Estructura, (SelectList)ViewBag.Estructuras, "Seleccione una Estructura", new { @class = "selectize1 md-input label-fixed", @id = "inputEstructura", @name = "inputEstructura" })
                </div>
            </div>

            <div class="uk-grid">
                <div class="uk-width-1-1">
                    <div class="uk-margin-small-top uk-width-1-1">
                        <div id="RolesNodosUsuario" class="uk-width-1-1"></div>
                    </div>
                </div>
            </div>



            <div class="uk-grid">
                <div class="uk-width-1-1">
                    <div class="uk-margin-small-top uk-width-1-1">
                        <div id="filterList" style="display: none;"></div>
                        <div id="usuarios" class="uk-width-1-1">
                        </div>
                    </div>
                </div>
            </div>

            @*<div class="uk-grid">
            <div class="uk-width-medium-1-1">
                <div id="RolesNodosUsuario">
                    <div class="uk-grid margin-top-grid">
                        <div class="uk-width-medium-2-3">
                            @Html.Label("Rol", "Rol")
                            @Html.DropDownListFor(model => model.Rol, (SelectList)ViewBag.Roles, "Seleccione un Rol", new { @class = "md-input label-fixed", data_md_selectize = "", data_md_selectize_bottom = "", data_uk_tooltip = "{pos:'top'}", title = "Select with tooltip" })

                        </div>
                    </div>
                    <div class="uk-grid">
                        <div class="uk-width-2-3">
                            @Html.Label("Nodos", "Nodos")
                            @Html.DropDownListFor(model => model.Nodos, (SelectList)ViewBag.Nodos, "Seleccione uno o mas Nodos", new { @class = "md-input label-fixed selectizeMulti ", data_uk_tooltip = "{pos:'top'}", title = "Select with tooltip" })

                        </div>
                        <div class="uk-width-1-3 uk-flex uk-flex-middle">
                            <button class="md-btn  md-btn-accent" type="button" onclick="selectAll();">Todos</button>
                            <button class="md-btn" type="button" onclick="desSelectAll()">Ninguno</button>
                        </div>
                    </div>
                    <div class="uk-grid">

                        <div class="uk-width-5-6">

                            @Html.Label("Usuarios", "Usuarios")
                            <input type="checkbox" class="check_" name="checkbox_" data-md-icheck id="siActivo" checked>
                            @Html.DropDownListFor(model => model.Usuarios, (SelectList)ViewBag.Usuarios, "Seleccione uno o mas Usuarios", new { @class = "md-input label-fixed selectizeMulti ", data_uk_tooltip = "{pos:'top'}", title = "Select with tooltip" })


                            @Html.DropDownListFor(model => model.Usuarios, (SelectList)ViewBag.Usuarios, "Seleccione uno o mas Usuarios", new { @class = "md-input label-fixed selectizeMulti ", data_uk_tooltip = "{pos:'top'}", title = "Select with tooltip" })
                        </div>

                    </div>
                    <div class="uk-grid">
                        <div class="uk-width-1-1">
                            <div class="uk-flex uk-flex-center">
                                <button title="Guardar" id="btnGuardar" class="md-btn md-btn-accent" type="submit"><span>Guardar</span></button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>*@
        </div>
    </div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>

        var userList = [];
        $(document).ready(function () {
            activarMenu("#AsignarRolesMasivamente-Rol");
            aplicarSelectize($('.selectize1'));
        });

        $(document).change(function () {
            $('#user-results li').on('click', function () {
                let itemText = $(this).text();
                let itemId = $(this).attr('data-id');

                if (userList.indexOf(itemId) === -1) {
                    userList.push(itemId);

                    let data = `<div class="item item-autocomplete">${itemText}<a onclick="removeUserItem(this,'${itemId}')" class="uk-close" tabindex="-1" title="Remove"></a> </div>`;

                    $("#user-items").prepend(data);
                }

                $("#idUsuario").removeClass('uk-open');
                $("#idUsuario").parent().attr('aria-expanded', 'false');

                setTimeout(function () {
                    debugger;
                    $('#inputUsuario').val('');
                    LimpiarInputUsuarios();
                    $('#usuario-Error').hide();
                }, 30);
            });
        });

        function LimpiarInputUsuarios() {
            var e = jQuery.Event("keyup");
            e.which = 8; // # Some key code value
            e.keyCode = 8;
            $("#inputUsuario").trigger(e);
        }

        function mostrarOpciones() {
            $("#idUsuario").addClass('uk-open');
            $("#user-results").parent().attr('aria-expanded', 'true');
        }

        function removeUserItem(value, item) {
            debugger;
            value.parentNode.remove();
            userList = userList.filter((e) => e !== item);
        }

        $("#FormAsignacionMasiva").submit(function (e) {


            debugger;
            e.preventDefault();

            if ($('#inputNodos').val() == null || $('#inputRol').val() == '' || userList.length == 0) {
                if ($('#inputNodos').val() == null) {
                    $('#nodo-Error').show();
                }

                if ($('#inputRol').val() == '') {
                    $('#rol-Error').show();
                }
                if (userList.length == 0) {
                    $('#usuario-Error').show();
                }


            }
            else {
                $.ajax({
                    url: '@Url.Action("GuardarAsignacionRolesMasivo", "Rol")',
                    type: "POST",
                    data: {
                        Estructura: $("#inputEstructura").val(),
                        Rol: $("#inputRol").val(),
                        Nodos: $("#inputNodos").val(),
                        Usuarios: userList
                    },
                    beforeSend: function (xhr) {
                        showLoadingModal();
                    },
                    success: function (data) {
                        hideLoadingModal();
                         swal({
                            title: "",
                            text: data.mensaje,
                            icon: data.tipoMensaje,
                            buttons: {
                                confirm: "Aceptar"
                            },
                            closeOnClickOutside: false,
                        }).then(() => {
                            if (data.tipoMensaje == "success") {
                                window.location.reload();
                            }
                        });
                    },
                    error: function (result) {
                        hideLoadingModal();
                    }
                });
            }

                
        });

        function selectAll() {
            $(function () {
                var $projectNodosIds = $('#inputNodos')[0].selectize;
                var optKeys = Object.keys($projectNodosIds.options);
                optKeys.forEach(function (key, index) {
                    $projectNodosIds.addItem(key);
                });
            });
        }

        function desSelectAll() {
            $(function () {
                $('#inputNodos').selectize({})[0].selectize.clear();
            });
        }


        function AplicarFilterList() {
            filterlist = new FilterList($("#filterList"));
            debugger;
            let url = '@Url.Action("GetUsuariosAutocomplete", "Rol")?buscarNominados=' + $("#inputNominado").is(":checked");
            let successResponse = (item) => {
                return {
                value: item.DescripcionAsignacionMasiva,
                    id: item.Id
                }
            }
            Usuario = new FilterTypeAutocomplete($("#idUsuario"), url, successResponse);
        }

        function cambiarUrlFilterAutocomplete() {
            Usuario._url = '@Url.Action("GetUsuariosAutocomplete", "Rol")?buscarNominados=' + $("#inputNominado").is(":checked");

        }
        
        $("#inputEstructura").on("change", function () {
            $.ajax(
            {
                url: '@Url.Action("GetRolesYNodos", "Rol")',
                type: "POST",
                async: true,
                data: {
                    cod: $('#inputEstructura').val(),
                },
                        beforeSend: function (xhr) {
                    showLoadingModal();
                },
                        success: function (data) {
                    hideLoadingModal();

                            $("#RolesNodosUsuario").html(data);
                            eventoChange();

                    aplicarSelectize($('.selectize'));
                    aplicarSelectizeMultiple($("#inputNodos"));

                    AplicarFilterList();
                    altair_forms.switches();

                },
                        error: function (e) {
                    hideLoadingModal();
                    swal("", "Ha Ocurrido un error inesperado", "error");
                },
                        complete: function () {
                            $("#inputNominado").on('change', function () {
                                $('.item-autocomplete').remove();
                                userList.splice(0, userList.length);

                                cambiarUrlFilterAutocomplete();
                            });

                            $("#user-items").click(function () {
                                $("#inputUsuario").focus();                               

                            });
                            //eventoChange();
                }
            })
        });





        @*function changeEstructura() {
            $.ajax(
                {
                    url: '@Url.Action("GetRolesYNodos", "Rol")',
                    type: "POST",
                    data: {
                        cod: $('#Estructura').val(),

                    },
                    beforeSend: function (xhr) {
                        showLoadingModal();
                    },
                    success: function (data) {
                        hideLoadingModal();
                        if (data.Roles !== null) {
                            let selectizeControlRoles = $('#Rol').selectize()[0].selectize;
                            selectizeControlRoles.clearOptions();
                            $.each(data.Roles, function (i, data) {
                                if (data.Value === -1) {
                                    selectizeControlRoles.addOption({ value: data.Value, text: data.Text });
                                    selectizeControlRoles.addItem(-1);
                                } else {
                                    selectizeControlRoles.addOption({ value: data.Value, text: data.Text });
                                }
                            }
                            );
                            let arrayRoles = Object.keys(selectizeControlRoles.options);
                            if (arrayRoles.length === 1) {
                                selectizeControlRoles.addItem(arrayRoles[0]);
                            }
                        }
                        if (data.Nodos !== null) {
                            let selectizeControlNodos = $('#Nodos').selectize()[0].selectize;
                            selectizeControlNodos.clearOptions();
                            $.each(data.Nodos, function (i, data) {
                                if (data.Value === -1) {
                                    selectizeControlNodos.addOption({ value: data.Value, text: data.Text });
                                    selectizeControlNodos.addItem(-1);
                                } else {
                                    selectizeControlNodos.addOption({ value: data.Value, text: data.Text });
                                }
                            }
                            );
                            let arrayNodos = Object.keys(selectizeControlNodos.options);
                            if (arrayNodos.length === 1) {
                                selectizeControlNodos.addItem(arrayNodos[0]);
                            }
                        }
                        if (data.Usuarios !== null) {
                            let selectizeControlUsuarios = $('#Usuarios').selectize()[0].selectize;
                            selectizeControlUsuarios.clearOptions();
                            $.each(data.Usuarios, function (i, data) {
                                if (data.Value === -1) {
                                    selectizeControlUsuarios.addOption({ value: data.Value, text: data.Text });
                                    selectizeControlUsuarios.addItem(-1);
                                } else {
                                    selectizeControlUsuarios.addOption({ value: data.Value, text: data.Text });
                                }
                            }
                            );
                            let arrayUsuarios = Object.keys(selectizeControlUsuarios.options);
                            if (arrayUsuarios.length === 1) {
                                selectizeControlUsuarios.addItem(arrayUsuarios[0]);
                            }
                        }
                        $("#RolesNodosUsuario").show();
                    },
                    error: function (e) {
                        hideLoadingModal();
                        swal("", "Ha Ocurrido un error inesperado", "error");
                    }
           });
        }*@

        function AjaxReturn(data) {
            hideLoadingModal();
            swal({
                title: "",
                text: data.mensaje,
                icon: data.tipoMensaje,
                buttons: {
                    confirm: "Aceptar"
                },
                closeOnClickOutside: false,
            }).then(() => {
                 if (data.tipoMensaje != "error") {
                        window.location.href = "@Url.Action("AsignarRolesMasivamente", "Rol")";
                    }
            });

        }

        function eventoChange() {
            $('#inputRol').change(function () {
                $('#rol-Error').hide();

            });
            $('#inputNodos').change(function () {
                $('#nodo-Error').hide();
            });

            

        };

    </script>
}

