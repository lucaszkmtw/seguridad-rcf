@model IList<TGP.Seguridad.BussinessLogic.Dto.ListadoNominadoViewModel>
@using TGP.Seguridad.BussinessLogic.Dto.Usuario;

@{
    ViewBag.Title = "Seg - Listado de Usuarios Nominados";
    Layout = "~/Views/Shared/_LayoutBootstrap.cshtml";
}


<div class="uk-grid sigaf-titulo">
    <div class="uk-width-large-1-2">
        <h2 class="uk-margin-bottom">Listado de Usuarios Nominados</h2>
    </div>
    <div class="uk-width-large-1-2">
        <div class="uk-grid uk-grid-small uk-flex uk-flex-right" data-uk-grid-margin data-uk-grid-match="{target:'.md-btn-sigaf'}">
            <div id="divGenerarArchivo">
                <a title="generar" onclick="showLoadingModal()" href="@Url.Action("NuevoNominado", "Usuario")" class="md-btn md-btn-sigaf md-btn-accent md-fab-wave-light waves-effect waves-button waves-light">
                    <h2 class="heading_d uk-text-left md-color-white">
                        Nuevo
                        <span class="sub-heading md-color-white uk-text-upper">
                            Usuario
                        </span>
                    </h2>
                    <i class="icon-appSigaf material-icons">add_circle</i>
                </a>
            </div>
        </div>
    </div>
</div>

<div class="md-card uk-margin-bottom">
    <div class="md-card-content">
        <div class="uk-grid">
            <div class="uk-width-1-1 uk-flex uk-margin-medium-top">
                <div class="md-input-wrapper md-input-filled uk-width-1-3 uk-margin-large-right uk-margin-left" style="margin-top:auto;">
                    @Html.Label("Activo", "Activo")
                    <select name="Activo" id="marcaActivo" class="md-input label-fixed selectize">
                        <option selected value="-1">TODOS</option>
                        <option value="true">SI</option>
                        <option value="false">NO</option>
                    </select>
                </div>
                <div class="md-input-wrapper md-input-filled uk-width-1-3 uk-margin-large-right">
                    @Html.Label("Bloqueado", "Bloqueado")
                    <select name="Bloqueado" id="marcaBloqueado" class="md-input label-fixed selectize">
                        <option selected value="-1">TODOS</option>
                        <option value="true">SI</option>
                        <option value="false">NO</option>
                    </select>
                </div>
                <div class="md-input-wrapper md-input-filled uk-width-1-3 uk-margin-large-right">
                    @Html.Label("TipoAutenticacion", "Tipo Autenticación")
                    <select name="TipoAutenticacion" id="marcaTipoAuth" class="md-input label-fixed selectize">
                        <option selected value="-1">TODOS</option>
                        <option value="@TipoAutenticacionDTO.INTERNA">Interna</option>
                        <option value="@TipoAutenticacionDTO.SIGAF">SIGAF</option>
                    </select>
                </div>
            </div>
            <div class="uk-width-1-1 uk-flex uk-margin-medium-top uk-flex-center">
                <button id="buscar" type="button" class="md-btn md-btn-primary">Buscar</button>
                <button id="botonLimpiar" type="button" class="md-btn md-btn">Limpiar</button>
            </div>
        </div>
    </div>
</div>
<div class="md-card">
    <div class="md-card-content">
        <div class="uk-grid">
            <div class="uk-width-1-1 uk-margin-large-top">
                <table id="listaNominados" class="uk-table" cellspacing="0" width="100%">
                    <thead>
                        <tr>
                            <th>Usuario</th>
                            <th>Descripcion</th>
                            <th>E-Mail</th>
                            <th>Activo</th>
                            <th>Bloqueado</th>
                            <th>Tipo Autenticación</th>
                            <th>Intentos</th>
                            <th></th>
                            <th></th>
                            <th></th>
                        </tr>
                    </thead>
                </table>
            </div>
        </div>
    </div>
</div>

<div id="editModalDescargaID" class="modal fade in" aria-hidden="false" data-url="@Url.Action("ModalPassMail", "Usuario", new { origen = "listado" })" aria-labelledby="myModalLabel" role="dialog" tabindex="-1">
    <div class="modal-dialog" style="width: 50%">
        <div class="modal-content">
            <div id="editModalDescargaBodyID">

            </div>
        </div>
    </div>
</div>


@section scripts{
    <script>
        $(document).ready(function () {
            showLoadingModal();
            activarMenu('#@ViewBag.MenuId');
            inicializarFiltros();
            UpdateTable($("#marcaActivo").val(), $("#marcaBloqueado").val(), $("#marcaTipoAuth").val());
        });

        var dt;
        function UpdateTable(marcaActivo, marcaBloqueado, marcaTipoAuth) {
            var url = '@Url.Action("PaginadoNominados", "Usuario")' + "?marcaActivo=" + marcaActivo + "&marcaBloqueado=" + marcaBloqueado + "&marcaTipoAuth=" + marcaTipoAuth;
            dt = $('#listaNominados').dataTable({
                    "scrollX": true,
                    "processing": true, // for show progress bar
                    "bProcessing": true,
                    "serverSide": true, // for process server side
                    "filter": true, // this is for enable filter (search box)
                    "orderMulti": false, // for disable multiple column at once
                    "iDisplayLength": 50,
                    "ajax": {
                        "url": url,
                        "type": "POST",
                        "datatype": "json",
                        "beforeSend": function (xhr) {
                            setTimeout(function () { hideLoadingModal() }, 500);
                        },
                        "dataSrc": function (json) {
                            return json.data;
                        },
                    },
                    aaSorting: [[0, "desc"]],
                    dom: agregarDomDatatable(),
                    aoColumnDefs: [
                        { bSortable: false, aTargets: [5, 6, 7, 8, 9] }
                    ],
                    "columns": [
                        { "data": "NombreUsuario", "name": "NombreUsuario" },
                        { "data": "DescripcionUsuario", "name": "NombreNominado" },
                        { "data": "EMail", "name": "EMail" },
                        { "data": "SiActivo", "name": "SiActivo", "className": "uk-text-center" },
                        { "data": "SiBloqueado", "name": "SiBloqueado", "className": "uk-text-center" },
                        { "data": "DescripcionTipoAutenticacion", "name": "DescripcionTipoAutenticacion", "className": "uk-text-center" },
                        { "data": "CantidadIntentos", "name": "CantidadIntentos", "className": "uk-text-center" },
                        {
                            "orderable": false,
                            "data": "Editar"
                        },
                        {
                            "orderable": false,
                            "data": "Eliminar",
                        },
                        {
                            "orderable": false,
                            "data": "Pass",
                        }

                    ],
                    "lengthMenu": [[10, 25, 50, 100, 300], [10, 25, 50, 100, 300]],
                    buttons: [
                        { extend: 'copy', className: 'md-btn md-btn-small', text: 'Copiar' },
                        { extend: 'csv', title: 'Usuarios Nominados', className: 'md-btn md-btn-small',},
                        { extend: 'pdf', title: 'Usuarios Nominados', className: 'md-btn md-btn-small', },
                        { extend: 'print', className: 'md-btn md-btn-small', text: 'Imprimir' }
                    ],
                language: agregarLenguajeDatatable()
            });
            $('#listaNominados_filter input').unbind();
            $('#listaNominados_filter input').bind('keyup', function (e) {
                if ($('#listaNominados_filter input').val().length > 3) {
                    dt.fnFilter(this.value);
                } else {
                    dt.fnFilter("");
                }
            });
        }

        function inicializarFiltros() {
            aplicarSelectize($('.selectize'));

            $("#buscar").on("click", function (e) {
                showLoadingModal();
                dt.fnDestroy()
                UpdateTable($("#marcaActivo").val(), $("#marcaBloqueado").val(), $("#marcaTipoAuth").val());
            });

            $("#botonLimpiar").on("click", function (e) {
                showLoadingModal();
                $("#marcaActivo").selectize({})[0].selectize.setValue("-1");
                $("#marcaBloqueado").selectize({})[0].selectize.setValue("-1");
                $("#marcaTipoAuth").selectize({})[0].selectize.setValue("-1");
                dt.fnDestroy()
                UpdateTable($("#marcaActivo").val(), $("#marcaBloqueado").val(), $("#marcaTipoAuth").val());
            });
        }


        //Elimina un usuario o lo desactiva dependiendo el caso
        function eliminarUsuario(descripcion, id, version) {
            swal({
                title: "",
                text: "¿Desea eliminar al Usuario " + descripcion +  "? ",
                icon: "warning",
                buttons: {
                    confirm: "Aceptar",
                    cancel: "Cancelar"
                },
                closeOnClickOutside: false,
            }).then(
                (isConfirm) => {
                    if (isConfirm) {
                         $.ajax({
                            type: "POST",
                            url: '@Url.Action("EliminarNominado", "Usuario")',
                            data: {
                                id: id,
                                v: version
                            },
                            beforeSend: function (xhr) {
                                showLoadingModal();
                            },
                            success: function (data) {
                                hideLoadingModal();
                                    swal({
                                        title: "",
                                        text: data.Mensaje,
                                        icon: data.Tipo,
                                        buttons: {
                                            confirm: "Aceptar",
                                            cancel: "Cancelar"
                                        },
                                        closeOnClickOutside: false,
                                    }).then(
                                        (isConfirm) => {
                                            if (isConfirm) {
                                                window.location.href = data.Url
                                            }
                                        });
                            },
                            error: function (e) {
                                hideLoadingModal();
                            }

                        });
                    }
                });

        }


        function showModalMail(modalContainerId, idUsu) {
            var url = $(modalContainerId).data('url');
            $.get(url, { idUsuario: idUsu }, function (data) {
                $("#editModalDescargaBodyID").html(data);
                UIkit.modal("#modal-enviar-mail").show();
            });
        }


        function EnviarMail(nombre, email, id, origen, version, tipoAutenticacion) {

            var textSwal = (tipoAutenticacion == "INTERNA" ?
                "Se le enviará al usuario " + nombre + " un mail a la cuenta " + email + " con una nueva contraseña."
                :
                "Se cambiará el tipo de autenticación. <br/> Desea continuar?");

            let wrapper = document.createElement('div');
            wrapper.innerHTML = textSwal;

            swal({
                title: "",
                content: wrapper,
                icon: "warning",
                buttons: {
                    confirm: "Aceptar",
                    cancel: "Cancelar"
                },
                closeOnClickOutside: false,
            }).then(
                (isConfirm) => {
                    if (isConfirm) {
                         $.ajax({
                            type: "POST",
                            url: '@Url.Action("MailFT", "Usuario")',
                            data: {
                                id: id,
                                tipo: "N",
                                version: version,
                                origen: origen,
                                tipoAutenticacion: tipoAutenticacion
                            },
                            beforeSend: function (xhr) {
                                showLoadingModal();
                            },
                            success: function (data) {
                                hideLoadingModal();
                                swal({
                                    title: "",
                                    text: data.Mensaje,
                                    icon: data.Tipo,
                                    buttons: {
                                        confirm: "Aceptar"
                                    },
                                    closeOnClickOutside: false,
                                }).then(() => {
                                    window.location.href = data.Url;
                                });
                            },
                            error: function (e) {
                                hideLoadingModal();
                            }

                        });
                    }
                });
        }

    </script>
}


